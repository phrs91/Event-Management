

import java.sql.*;
import javax.swing.JOptionPane;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author Sonu
 */
public class UserHome extends javax.swing.JFrame {

    /**
     * Creates new form UserHome
     */
    public UserHome() {
        super("User Home");
        initComponents();
    }
 
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jButton1 = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        DayField = new javax.swing.JTextField();
        MonthField = new javax.swing.JTextField();
        YearField = new javax.swing.JTextField();
        AvailableRooms = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        RoomNum = new javax.swing.JTextField();
        AvailableDates = new javax.swing.JButton();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        cday = new javax.swing.JTextField();
        cmonth = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        cyear = new javax.swing.JTextField();
        Book = new javax.swing.JButton();
        RoomDetails = new javax.swing.JButton();
        Logout = new javax.swing.JButton();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        Eday = new javax.swing.JTextField();
        jLabel16 = new javax.swing.JLabel();
        Emonth = new javax.swing.JTextField();
        jLabel17 = new javax.swing.JLabel();
        Eyear = new javax.swing.JTextField();
        SeeEvents = new javax.swing.JButton();

        jButton1.setText("jButton1");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel2.setText("Welcome User");

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel1.setText("See Availability of Rooms on Particular Date");

        jLabel3.setText("Enter Date");

        jLabel4.setText("Day");

        jLabel5.setText("Month");

        jLabel6.setText("Year");

        AvailableRooms.setText("See Available Rooms");
        AvailableRooms.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AvailableRoomsActionPerformed(evt);
            }
        });

        jLabel7.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel7.setText("Availability of Date in Particular Room");

        jLabel8.setText("Enter Room");

        jLabel9.setText("Room Number");

        AvailableDates.setText("See Available Dates");
        AvailableDates.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AvailableDatesActionPerformed(evt);
            }
        });

        jLabel10.setText("Current Date");

        jLabel11.setText("Day");

        jLabel12.setText("Month");

        jLabel13.setText("Year");

        Book.setText("Go To Booking Page");
        Book.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BookActionPerformed(evt);
            }
        });

        RoomDetails.setText("Get Room Details");
        RoomDetails.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RoomDetailsActionPerformed(evt);
            }
        });

        Logout.setText("Logout");
        Logout.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                LogoutActionPerformed(evt);
            }
        });

        jLabel14.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel14.setText("Events On a particular day");

        jLabel15.setText("Day");

        jLabel16.setText("Month");

        jLabel17.setText("Year");

        SeeEvents.setText("See Events");
        SeeEvents.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SeeEventsActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 272, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addGap(57, 57, 57)
                                .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jLabel9, javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(86, 86, 86)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(cyear)
                                    .addComponent(cmonth)
                                    .addComponent(cday, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addGap(49, 49, 49)
                                .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(RoomNum, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(Book)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(RoomDetails)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(Logout)
                        .addContainerGap())
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(AvailableRooms, javax.swing.GroupLayout.PREFERRED_SIZE, 196, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(layout.createSequentialGroup()
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jLabel6))
                                    .addGap(83, 83, 83)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                        .addComponent(YearField, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 64, Short.MAX_VALUE)
                                        .addComponent(MonthField, javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(DayField))))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(65, 65, 65)
                                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel14, javax.swing.GroupLayout.PREFERRED_SIZE, 173, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(136, 136, 136))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(253, 253, 253)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel15)
                                    .addComponent(jLabel16)
                                    .addComponent(jLabel17))
                                .addGap(71, 71, 71)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(Eday, javax.swing.GroupLayout.DEFAULT_SIZE, 50, Short.MAX_VALUE)
                                    .addComponent(Emonth)
                                    .addComponent(Eyear))
                                .addGap(38, 38, 38)
                                .addComponent(SeeEvents, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(AvailableDates, javax.swing.GroupLayout.PREFERRED_SIZE, 187, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel13)
                            .addComponent(jLabel12)
                            .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 240, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(47, 47, 47)
                        .addComponent(jLabel1))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(Book, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(RoomDetails, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(Logout))))
                .addGap(19, 19, 19)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addGap(15, 15, 15)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(DayField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jLabel14, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(20, 20, 20)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(MonthField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5)
                    .addComponent(jLabel15)
                    .addComponent(Eday, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(YearField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel6)
                            .addComponent(jLabel16)
                            .addComponent(Emonth, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(8, 8, 8)
                        .addComponent(SeeEvents, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel17)
                    .addComponent(Eyear, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(AvailableRooms, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel7)
                .addGap(10, 10, 10)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(RoomNum, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel9)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel10)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel11)
                    .addComponent(cday, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(22, 22, 22)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(cmonth, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel12))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel13)
                    .addComponent(cyear, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(AvailableDates, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(28, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void AvailableRoomsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AvailableRoomsActionPerformed
        // TODO add your handling code here:
        try{
            int day=Integer.parseInt(DayField.getText());
        int month=Integer.parseInt(MonthField.getText());
        int year=Integer.parseInt(YearField.getText());
        boolean flag=true;
        if(month<0||month>12||day<1||day>31||year<2016||(month==2&&day>=30))
            JOptionPane.showMessageDialog(null,"Invalid Date");
        else
        {
            Class.forName("com.mysql.jdbc.Driver");  
            String conarg="jdbc:mysql://";
        conarg+=Home.Saddress;
        conarg+=":3306/sonupmandal";
 //Connection con=DriverManager.getConnection("jdbc:mysql://localhost":3306/sonupmandal",Home.UserName,"");  
                Connection con=DriverManager.getConnection(conarg,Home.UserName,Home.Password);
//Connection con=DriverManager.getConnection("jdbc:mysql://Home.Sadress:3306/sonupmandal",Home.UserName,"");  
Statement stmt=con.createStatement();  
String query="";
         query="SELECT room from bookings where Day='"+day+"' AND Month='"+month+"' AND Year='"+year+"'";
         ResultSet rs=stmt.executeQuery(query); 
         String outp="Rooms Available are \n";
         System.out.println("Room booked at this date are ");
         
         int temparr[]=new int[1000];
         for(int i=1;i<=999;i++)temparr[i]=0;
         while(rs.next())
         {
             System.out.println(Integer.parseInt(rs.getString(1)));
             temparr[rs.getInt(1)]=-1;
         }
         query="select room from roomdetail";
         rs=stmt.executeQuery(query);
         while(rs.next())
             temparr[rs.getInt(1)]+=2;
         for(int i=1;i<=999;i++)
         {
             if(temparr[i]==2)
                 outp+="R"+Integer.toString(i)+"\n";
         }
           //  temparr[i]=
         JOptionPane.showMessageDialog(null,outp);
        }  
        }catch(Exception e){System.out.println(e);}
    }//GEN-LAST:event_AvailableRoomsActionPerformed

    private void AvailableDatesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AvailableDatesActionPerformed
        // TODO add your handling code here:
        try{
        int currday=Integer.parseInt(cday.getText());
        int currmonth=Integer.parseInt(cmonth.getText());
        int curryear=Integer.parseInt(cyear.getText());
        int roomno=Integer.parseInt(RoomNum.getText());
        Class.forName("com.mysql.jdbc.Driver");
        String conarg="jdbc:mysql://";
        conarg+=Home.Saddress;
        conarg+=":3306/sonupmandal";
 //Connection con=DriverManager.getConnection("jdbc:mysql://localhost":3306/sonupmandal",Home.UserName,"");  
                Connection con=DriverManager.getConnection(conarg,Home.UserName,Home.Password);
      //  Connection con=DriverManager.getConnection("jdbc:mysql://Home.Sadress:3306/sonupmandal",Home.UserName,"");
        Statement stmt=con.createStatement();
                
        String query="";
        query="Select room from roomdetail";
        ResultSet rs1=stmt.executeQuery(query);
        boolean blag=false;
        while(rs1.next())
        {
           if(rs1.getInt(1)==roomno)
           {
               blag=true;
               break;
           }
        }
        if(blag)
        {
          query="Select Day from bookings where room='"+roomno+"' AND Day>='"+currday+"' AND Month='"+currmonth+"' AND Year='"+curryear+"'";
        ResultSet rs=stmt.executeQuery(query);
        int temparr[]=new int[32];
        for(int i=0;i<32;i++)temparr[i]=0;
        while(rs.next())
        {
            temparr[Integer.parseInt(rs.getString(1))]=1;
        }
        String outp="";
        for(int i=currday;i<32;i++)
        {
            if(temparr[i]==0)
                outp=outp+i+"-"+currmonth+"-"+curryear+"\n";
        }
        JOptionPane.showMessageDialog(null,outp);
        }
        else
            JOptionPane.showMessageDialog(null,"This Room is not yet Available by the admin to book "); 
        
        
        
        
        }catch(Exception e){System.out.println(e);}
        
    }//GEN-LAST:event_AvailableDatesActionPerformed

    private void BookActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BookActionPerformed
        // TODO add your handling code here:
        BookingPage bp=new BookingPage();
        this.dispose();
        bp.setVisible(true);
    }//GEN-LAST:event_BookActionPerformed

    private void RoomDetailsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RoomDetailsActionPerformed
        // TODO add your handling code here:
        RoomInfo ri=new RoomInfo();
        this.dispose();
        ri.setVisible(true);
    }//GEN-LAST:event_RoomDetailsActionPerformed

    private void LogoutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_LogoutActionPerformed
        // TODO add your handling code here:
        Home h=new Home();
        this.dispose();
        h.setVisible(true);
    }//GEN-LAST:event_LogoutActionPerformed

    private void SeeEventsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SeeEventsActionPerformed
        // TODO add your handling code here:
        int day=Integer.parseInt(Eday.getText());
        int month=Integer.parseInt(Emonth.getText());
        int year=Integer.parseInt(Eyear.getText());
        try{
        Class.forName("com.mysql.jdbc.Driver");
        String conarg="jdbc:mysql://";
        conarg+=Home.Saddress;
        conarg+=":3306/sonupmandal";
 //Connection con=DriverManager.getConnection("jdbc:mysql://localhost":3306/sonupmandal",Home.UserName,"");  
                Connection con=DriverManager.getConnection(conarg,Home.UserName,Home.Password);
       // Connection con=DriverManager.getConnection("jdbc:mysql://Home.Sadress:3306/sonupmandal",Home.UserName,"");
        Statement stmt=con.createStatement();
                
        String query="Select eventname,room from bookings where Day='"+day+"' AND Month='"+month+"' AND Year='"+year+"'";
        ResultSet rs=stmt.executeQuery(query);
       String outp="Evnets on "+day+"-"+month+"-"+year+" are\n";
       boolean hai=false;
       while(rs.next())
       {
           hai=true;
           System.out.println(rs.getString(1));
           outp+=rs.getString(1)+"   in Room    "+Integer.toString(rs.getInt(2))+"\n";
       }
       if(!hai)
           JOptionPane.showMessageDialog(null,"There is no such event on this day ");
       else
           JOptionPane.showMessageDialog(null,outp);
           
        }catch(Exception e){System.out.println(e);}
         
    }//GEN-LAST:event_SeeEventsActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(UserHome.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(UserHome.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(UserHome.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(UserHome.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new UserHome().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton AvailableDates;
    private javax.swing.JButton AvailableRooms;
    private javax.swing.JButton Book;
    private javax.swing.JTextField DayField;
    private javax.swing.JTextField Eday;
    private javax.swing.JTextField Emonth;
    private javax.swing.JTextField Eyear;
    private javax.swing.JButton Logout;
    private javax.swing.JTextField MonthField;
    private javax.swing.JButton RoomDetails;
    private javax.swing.JTextField RoomNum;
    private javax.swing.JButton SeeEvents;
    private javax.swing.JTextField YearField;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JTextField cday;
    private javax.swing.JTextField cmonth;
    private javax.swing.JTextField cyear;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    // End of variables declaration//GEN-END:variables
}
